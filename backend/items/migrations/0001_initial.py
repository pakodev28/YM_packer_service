# Generated by Django 4.2.1 on 2023-06-12 01:35

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CargoType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cargotype", models.PositiveIntegerField(unique=True)),
                ("description", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Карготип",
                "verbose_name_plural": "Карготипы",
                "ordering": ["cargotype"],
            },
        ),
        migrations.CreateModel(
            name="CartonType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cartontype", models.CharField(max_length=255)),
                ("length", models.FloatField()),
                ("width", models.FloatField()),
                ("height", models.FloatField()),
            ],
            options={
                "verbose_name": "Упаковка",
                "verbose_name_plural": "Упаковки",
                "ordering": ["cartontype"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "orderkey",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("forming", "Being Formed"),
                            ("collecting", "Being Collected"),
                            ("collected", "Collected"),
                        ],
                        max_length=20,
                    ),
                ),
                ("whs", models.PositiveSmallIntegerField(default=0)),
                (
                    "box_num",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("sel_calc_cube", models.FloatField(blank=True, null=True)),
                ("pack_volume", models.FloatField(blank=True, null=True)),
                (
                    "tracking_id",
                    models.UUIDField(
                        blank=True, editable=False, null=True, unique=True
                    ),
                ),
                ("goods_weight", models.FloatField(blank=True, null=True)),
                (
                    "recommended_cartontype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recommended_orders",
                        to="items.cartontype",
                    ),
                ),
                (
                    "selected_cartontype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="selected_orders",
                        to="items.cartontype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Заказы",
                "ordering": ["status"],
            },
        ),
        migrations.CreateModel(
            name="Sku",
            fields=[
                (
                    "sku",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("length", models.FloatField()),
                ("width", models.FloatField()),
                ("height", models.FloatField()),
                ("quantity", models.IntegerField(default=0)),
                ("goods_wght", models.FloatField(default=0.0)),
                ("cargotypes", models.ManyToManyField(to="items.cargotype")),
            ],
            options={
                "verbose_name": "Товар",
                "verbose_name_plural": "Товары",
                "ordering": ["sku"],
            },
        ),
        migrations.CreateModel(
            name="OrderSku",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField()),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="items.order",
                    ),
                ),
                (
                    "sku",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="items.sku",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="sku",
            field=models.ManyToManyField(
                help_text="Выберите товары",
                related_name="orders",
                through="items.OrderSku",
                to="items.sku",
                verbose_name="Товары",
            ),
        ),
    ]
